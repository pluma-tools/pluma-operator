// Copyright 2019 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: istio/v1alpha1/operator.proto

// $title: IstioOperator Options
// $description: Configuration affecting Istio control plane installation
// version and shape. $location:
// https://istio.io/docs/reference/config/istio.operator.v1alpha1.html $weight:
// 20 $mode: package

// Configuration affecting Istio control plane installation version and shape.
// Note: unlike other Istio protos, field names must use camelCase. This is
// asserted in tests. Without camelCase, the `json` tag on the Go struct will
// not match the user's JSON representation. This leads to Kubernetes merge
// libraries, which rely on this tag, to fail. All other usages use jsonpb which
// does not use the `json` tag.

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status describes the current state of a component.
type InstallStatus_Status int32

const (
	// Component is not present.
	InstallStatus_NONE InstallStatus_Status = 0
	// Component is being updated to a different version.
	InstallStatus_UPDATING InstallStatus_Status = 1
	// Controller has started but not yet completed reconciliation loop for the
	// component.
	InstallStatus_RECONCILING InstallStatus_Status = 2
	// Component is healthy.
	InstallStatus_HEALTHY InstallStatus_Status = 3
	// Component is in an error state.
	InstallStatus_ERROR InstallStatus_Status = 4
	// Overall status only and would not be set as a component status.
	// Action is needed from the user for reconciliation to proceed
	// e.g. There are proxies still pointing to the control plane revision when
	// try to remove an `IstioOperator` CR.
	InstallStatus_ACTION_REQUIRED InstallStatus_Status = 5
)

// Enum value maps for InstallStatus_Status.
var (
	InstallStatus_Status_name = map[int32]string{
		0: "NONE",
		1: "UPDATING",
		2: "RECONCILING",
		3: "HEALTHY",
		4: "ERROR",
		5: "ACTION_REQUIRED",
	}
	InstallStatus_Status_value = map[string]int32{
		"NONE":            0,
		"UPDATING":        1,
		"RECONCILING":     2,
		"HEALTHY":         3,
		"ERROR":           4,
		"ACTION_REQUIRED": 5,
	}
)

func (x InstallStatus_Status) Enum() *InstallStatus_Status {
	p := new(InstallStatus_Status)
	*p = x
	return p
}

func (x InstallStatus_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstallStatus_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_istio_v1alpha1_operator_proto_enumTypes[0].Descriptor()
}

func (InstallStatus_Status) Type() protoreflect.EnumType {
	return &file_istio_v1alpha1_operator_proto_enumTypes[0]
}

func (x InstallStatus_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstallStatus_Status.Descriptor instead.
func (InstallStatus_Status) EnumDescriptor() ([]byte, []int) {
	return file_istio_v1alpha1_operator_proto_rawDescGZIP(), []int{1, 0}
}

type IstioOperatorSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Path or name for the profile e.g.
	//
	// * minimal (looks in profiles dir for a file called minimal.yaml)
	// * /tmp/istio/install/values/custom/custom-install.yaml (local file path)
	//
	// default profile is used if this field is unset.
	Profile string `protobuf:"bytes,10,opt,name=profile,proto3" json:"profile,omitempty"`
	// Path for the install package. e.g.
	//
	// * /tmp/istio-installer/nightly (local file path)
	InstallPackagePath string `protobuf:"bytes,11,opt,name=installPackagePath,proto3" json:"installPackagePath,omitempty"`
	// Root for docker image paths e.g. `docker.io/istio`
	Hub string `protobuf:"bytes,12,opt,name=hub,proto3" json:"hub,omitempty"`
	// Version tag for docker images e.g. `1.7.2`
	Tag *structpb.Value `protobuf:"bytes,13,opt,name=tag,proto3" json:"tag,omitempty"`
	// $hide_from_docs
	// Resource suffix is appended to all resources installed by each component.
	// Never implemented; replaced by revision.
	//
	// Deprecated: Marked as deprecated in istio/v1alpha1/operator.proto.
	ResourceSuffix string `protobuf:"bytes,14,opt,name=resourceSuffix,proto3" json:"resourceSuffix,omitempty"`
	// Namespace to install control plane resources into. If unset, Istio will be
	// installed into the same namespace as the `IstioOperator` CR. You must also
	// set `values.global.istioNamespace` if you wish to install Istio in a custom
	// namespace. If you have enabled CNI, you must  exclude this namespace by
	// adding it to the list `values.cni.excludeNamespaces`.
	Namespace string `protobuf:"bytes,15,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Identify the revision this installation is associated with.
	// This option is currently experimental.
	Revision string `protobuf:"bytes,16,opt,name=revision,proto3" json:"revision,omitempty"`
	// Compatibility version allows configuring Istio to behave like an older
	// version by tuning various settings to align with a previous versions
	// defaults. This accepts a `major.minor` format, such as `1.23`. This option
	// is currently experimental.
	CompatibilityVersion string `protobuf:"bytes,18,opt,name=compatibilityVersion,proto3" json:"compatibilityVersion,omitempty"`
	// Config used by control plane components internally.
	MeshConfig *structpb.Struct `protobuf:"bytes,40,opt,name=meshConfig,proto3" json:"meshConfig,omitempty"`
	// Kubernetes resource settings, enablement and component-specific settings
	// that are not internal to the component.
	Components *structpb.Struct `protobuf:"bytes,50,opt,name=components,proto3" json:"components,omitempty"`
	// Overrides for default `values.yaml`. This is a validated pass-through to
	// Helm templates. See the [Helm installation
	// options](https://istio.io/v1.5/docs/reference/config/installation-options/)
	// for schema details. Anything that is available in `IstioOperatorSpec`
	// should be set above rather than using the passthrough. This includes
	// Kubernetes resource settings for components in `KubernetesResourcesSpec`.
	Values *structpb.Struct `protobuf:"bytes,100,opt,name=values,proto3" json:"values,omitempty"`
	// Unvalidated overrides for default `values.yaml`. Used for custom templates
	// where new parameters are added.
	UnvalidatedValues *structpb.Struct `protobuf:"bytes,101,opt,name=unvalidatedValues,proto3" json:"unvalidatedValues,omitempty"`
}

func (x *IstioOperatorSpec) Reset() {
	*x = IstioOperatorSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_istio_v1alpha1_operator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IstioOperatorSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IstioOperatorSpec) ProtoMessage() {}

func (x *IstioOperatorSpec) ProtoReflect() protoreflect.Message {
	mi := &file_istio_v1alpha1_operator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IstioOperatorSpec.ProtoReflect.Descriptor instead.
func (*IstioOperatorSpec) Descriptor() ([]byte, []int) {
	return file_istio_v1alpha1_operator_proto_rawDescGZIP(), []int{0}
}

func (x *IstioOperatorSpec) GetProfile() string {
	if x != nil {
		return x.Profile
	}
	return ""
}

func (x *IstioOperatorSpec) GetInstallPackagePath() string {
	if x != nil {
		return x.InstallPackagePath
	}
	return ""
}

func (x *IstioOperatorSpec) GetHub() string {
	if x != nil {
		return x.Hub
	}
	return ""
}

func (x *IstioOperatorSpec) GetTag() *structpb.Value {
	if x != nil {
		return x.Tag
	}
	return nil
}

// Deprecated: Marked as deprecated in istio/v1alpha1/operator.proto.
func (x *IstioOperatorSpec) GetResourceSuffix() string {
	if x != nil {
		return x.ResourceSuffix
	}
	return ""
}

func (x *IstioOperatorSpec) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IstioOperatorSpec) GetRevision() string {
	if x != nil {
		return x.Revision
	}
	return ""
}

func (x *IstioOperatorSpec) GetCompatibilityVersion() string {
	if x != nil {
		return x.CompatibilityVersion
	}
	return ""
}

func (x *IstioOperatorSpec) GetMeshConfig() *structpb.Struct {
	if x != nil {
		return x.MeshConfig
	}
	return nil
}

func (x *IstioOperatorSpec) GetComponents() *structpb.Struct {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *IstioOperatorSpec) GetValues() *structpb.Struct {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *IstioOperatorSpec) GetUnvalidatedValues() *structpb.Struct {
	if x != nil {
		return x.UnvalidatedValues
	}
	return nil
}

// Observed state of IstioOperator
type InstallStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Overall status of all components controlled by the operator.
	//
	// * If all components have status `NONE`, overall status is `NONE`.
	// * If all components are `HEALTHY`, overall status is `HEALTHY`.
	// * If one or more components are `RECONCILING` and others are `HEALTHY`,
	// overall status is `RECONCILING`.
	// * If one or more components are `UPDATING` and others are `HEALTHY`,
	// overall status is `UPDATING`.
	// * If components are a mix of `RECONCILING`, `UPDATING` and `HEALTHY`,
	// overall status is `UPDATING`.
	// * If any component is in `ERROR` state, overall status is `ERROR`.
	// * If further action is needed for reconciliation to proceed, overall status
	// is `ACTION_REQUIRED`.
	Status InstallStatus_Status `protobuf:"varint,1,opt,name=status,proto3,enum=istio.operator.v1alpha1.InstallStatus_Status" json:"status,omitempty"`
	// Optional message providing additional information about the existing
	// overall status.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// Individual status of each component controlled by the operator. The map key
	// is the name of the component.
	ComponentStatus map[string]*InstallStatus_VersionStatus `protobuf:"bytes,2,rep,name=componentStatus,proto3" json:"componentStatus,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *InstallStatus) Reset() {
	*x = InstallStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_istio_v1alpha1_operator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallStatus) ProtoMessage() {}

func (x *InstallStatus) ProtoReflect() protoreflect.Message {
	mi := &file_istio_v1alpha1_operator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallStatus.ProtoReflect.Descriptor instead.
func (*InstallStatus) Descriptor() ([]byte, []int) {
	return file_istio_v1alpha1_operator_proto_rawDescGZIP(), []int{1}
}

func (x *InstallStatus) GetStatus() InstallStatus_Status {
	if x != nil {
		return x.Status
	}
	return InstallStatus_NONE
}

func (x *InstallStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InstallStatus) GetComponentStatus() map[string]*InstallStatus_VersionStatus {
	if x != nil {
		return x.ComponentStatus
	}
	return nil
}

// VersionStatus is the status and version of a component.
type InstallStatus_VersionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Status  InstallStatus_Status `protobuf:"varint,2,opt,name=status,proto3,enum=istio.operator.v1alpha1.InstallStatus_Status" json:"status,omitempty"`
	Error   string               `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *InstallStatus_VersionStatus) Reset() {
	*x = InstallStatus_VersionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_istio_v1alpha1_operator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallStatus_VersionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallStatus_VersionStatus) ProtoMessage() {}

func (x *InstallStatus_VersionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_istio_v1alpha1_operator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallStatus_VersionStatus.ProtoReflect.Descriptor instead.
func (*InstallStatus_VersionStatus) Descriptor() ([]byte, []int) {
	return file_istio_v1alpha1_operator_proto_rawDescGZIP(), []int{1, 0}
}

func (x *InstallStatus_VersionStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallStatus_VersionStatus) GetStatus() InstallStatus_Status {
	if x != nil {
		return x.Status
	}
	return InstallStatus_NONE
}

func (x *InstallStatus_VersionStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_istio_v1alpha1_operator_proto protoreflect.FileDescriptor

var file_istio_v1alpha1_operator_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x17, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb4, 0x04, 0x0a, 0x11, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x68, 0x75, 0x62, 0x12, 0x28, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2a, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x37, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x11, 0x75, 0x6e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x11,
	0x75, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x4a, 0x04, 0x08, 0x11, 0x10, 0x12, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xba, 0x04, 0x0a, 0x0d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x69, 0x73, 0x74,
	0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x86, 0x01, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x78, 0x0a, 0x14, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x45, 0x43, 0x4f, 0x4e,
	0x43, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c,
	0x54, 0x48, 0x59, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04,
	0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x05, 0x42, 0x20, 0x5a, 0x1e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x69,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_istio_v1alpha1_operator_proto_rawDescOnce sync.Once
	file_istio_v1alpha1_operator_proto_rawDescData = file_istio_v1alpha1_operator_proto_rawDesc
)

func file_istio_v1alpha1_operator_proto_rawDescGZIP() []byte {
	file_istio_v1alpha1_operator_proto_rawDescOnce.Do(func() {
		file_istio_v1alpha1_operator_proto_rawDescData = protoimpl.X.CompressGZIP(file_istio_v1alpha1_operator_proto_rawDescData)
	})
	return file_istio_v1alpha1_operator_proto_rawDescData
}

var file_istio_v1alpha1_operator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_istio_v1alpha1_operator_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_istio_v1alpha1_operator_proto_goTypes = []interface{}{
	(InstallStatus_Status)(0),           // 0: istio.operator.v1alpha1.InstallStatus.Status
	(*IstioOperatorSpec)(nil),           // 1: istio.operator.v1alpha1.IstioOperatorSpec
	(*InstallStatus)(nil),               // 2: istio.operator.v1alpha1.InstallStatus
	(*InstallStatus_VersionStatus)(nil), // 3: istio.operator.v1alpha1.InstallStatus.VersionStatus
	nil,                                 // 4: istio.operator.v1alpha1.InstallStatus.ComponentStatusEntry
	(*structpb.Value)(nil),              // 5: google.protobuf.Value
	(*structpb.Struct)(nil),             // 6: google.protobuf.Struct
}
var file_istio_v1alpha1_operator_proto_depIdxs = []int32{
	5, // 0: istio.operator.v1alpha1.IstioOperatorSpec.tag:type_name -> google.protobuf.Value
	6, // 1: istio.operator.v1alpha1.IstioOperatorSpec.meshConfig:type_name -> google.protobuf.Struct
	6, // 2: istio.operator.v1alpha1.IstioOperatorSpec.components:type_name -> google.protobuf.Struct
	6, // 3: istio.operator.v1alpha1.IstioOperatorSpec.values:type_name -> google.protobuf.Struct
	6, // 4: istio.operator.v1alpha1.IstioOperatorSpec.unvalidatedValues:type_name -> google.protobuf.Struct
	0, // 5: istio.operator.v1alpha1.InstallStatus.status:type_name -> istio.operator.v1alpha1.InstallStatus.Status
	4, // 6: istio.operator.v1alpha1.InstallStatus.componentStatus:type_name -> istio.operator.v1alpha1.InstallStatus.ComponentStatusEntry
	0, // 7: istio.operator.v1alpha1.InstallStatus.VersionStatus.status:type_name -> istio.operator.v1alpha1.InstallStatus.Status
	3, // 8: istio.operator.v1alpha1.InstallStatus.ComponentStatusEntry.value:type_name -> istio.operator.v1alpha1.InstallStatus.VersionStatus
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_istio_v1alpha1_operator_proto_init() }
func file_istio_v1alpha1_operator_proto_init() {
	if File_istio_v1alpha1_operator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_istio_v1alpha1_operator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IstioOperatorSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_istio_v1alpha1_operator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_istio_v1alpha1_operator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallStatus_VersionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_istio_v1alpha1_operator_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_istio_v1alpha1_operator_proto_goTypes,
		DependencyIndexes: file_istio_v1alpha1_operator_proto_depIdxs,
		EnumInfos:         file_istio_v1alpha1_operator_proto_enumTypes,
		MessageInfos:      file_istio_v1alpha1_operator_proto_msgTypes,
	}.Build()
	File_istio_v1alpha1_operator_proto = out.File
	file_istio_v1alpha1_operator_proto_rawDesc = nil
	file_istio_v1alpha1_operator_proto_goTypes = nil
	file_istio_v1alpha1_operator_proto_depIdxs = nil
}
