name: Release Latest

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
  pull_request:
    types: [opened, synchronize, labeled]

permissions:
  contents: read
  packages: write

# Limit workflow run or job concurrency,
# avoid workflow failed when merge more than one PR in short time.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Release Latest Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy'))
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.1
        with:
          go-version: 1.23.x
          cache: true
      - name: Get tag name
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
            echo "Building release version ${GITHUB_REF#refs/tags/}"
          else
            echo "Building dev version"
        shell: /usr/bin/bash -e {0}
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        run: |
          echo "Building and pushing image with tag: ${{ steps.get_tag.outputs.tag }}"
          make release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUB: ghcr.io/pluma-tools
          PLATFORMS: linux/amd64,linux/arm64
          PUSH_IMAGES: 1
          ${{ if startsWith(github.ref, 'refs/tags/') }}:
            VERSION: ${{ steps.get_tag.outputs.tag }}
